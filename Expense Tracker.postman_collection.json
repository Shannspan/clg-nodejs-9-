{
	"info": {
		"_postman_id": "03b6b257-d0e2-4ab5-b64a-569abf89688b",
		"name": "Expense Tracker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24594825"
	},
	"item": [
		{
			"name": "APIs",
			"item": [
				{
					"name": "Home",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// this test is checking for 200 response code which means working\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"   //pm.response.to.have.status(200); or\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"})\r",
									"\r",
									"// to check for particular values in the response body\r",
									"// can do mulitple values in the one test function - and if there is a failiure\r",
									"// test result tab will detail exact location of failure eg name or amount in this case\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get full list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// this test is checking for 200 response code which means working\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"   //pm.response.to.have.status(200); or\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"})\r",
									"\r",
									"// to check for particular values in the response body\r",
									"// can do mulitple values in the one test function - and if there is a failiure\r",
									"// test result tab will detail exact location of failure eg name or amount in this case\r",
									"pm.test(\"Response is correct\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3000/expense/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"expense",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific record by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// this test is checking for 200 response code which means working\r",
									"pm.test(\"Status code is 200\", function() {\r",
									"   //pm.response.to.have.status(200); or\r",
									"    pm.expect(pm.response.code).to.eql(200);\r",
									"})\r",
									"\r",
									"// to check for particular values in the response body\r",
									"// can do mulitple values in the one test function - and if there is a failiure\r",
									"// test result tab will detail exact location of failure eg name or amount in this case\r",
									"pm.test(\"Response is correct\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/expense/639a932ac88e3ac618718e75",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"expense",
								"639a932ac88e3ac618718e75"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a record",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/expense/delete/63b4ead205b7551555af25d7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"expense",
								"delete",
								"63b4ead205b7551555af25d7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post insert record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"expense\": \"first aid kit\",\r\n    \"amount\": \"60\",\r\n    \"date\": \"23/08/2022\",\r\n    \"notes\": \"Bush walking\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/expense",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"expense"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post update record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"_id\": \"639a9b8f7ccf9265b2cc43ef\",\r\n  \"expense\": \"Food\",\r\n  \"amount\": \"150\",\r\n  \"date\": \"20/12/22\",  \r\n  \"notes\": \"Christmas shopping\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/expense",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"expense"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}